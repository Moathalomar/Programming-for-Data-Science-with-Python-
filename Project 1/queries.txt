Q1 Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

select c.name as name, count(title) as rental_countt
from film f 
join film_category f_c 
on f.film_id = f_c.film_id 
join category c 
on f_c.category_id = c.category_id 
join inventory i 
on f.film_id = i.film_id 
join rental r
on i.inventory_id = r.inventory_id 
where c.name in  ('Comedy', 'Family', 'Music', 'Animation', 'Children', 'Classics')
group by 1  
order by 1 ;


Q2 Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? 

select f.title, c.name, f.rental_duration, NTILE(4) OVER (order by f.rental_duration) as standard_quartil
from film_category f_c
join category c
on c.category_id = f_c.category_id
join film f
on f.film_id = f_c.film_id
where c.name in ('Comedy', 'Family', 'Music', 'Animation', 'Children', 'Classics')
order by 4


Q3 Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. The resulting table should have three columns: 

select M1.name, M1.standard_quartile, count(M1.standard_quartile)
from (select f.title, c.name , f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
from film_category f_c
join category c
on c.category_id = f_c.category_id
join film f
on f.film_id = f_c.film_id
where c.name in ('Comedy', 'Family', 'Music', 'Animation', 'Children', 'Classics'))  M1            
group by 1, 2
order by 1, 2


Q4 Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?

with M1 as (select p.customer_id, c.first_name    || ' ' ||  c.last_name as full_name, sum(amount) pay_total
from payment p
join customer c
on p.customer_id = c.customer_id
group by 1, 2
order by 3 desc
 limit 10)
select DATE_TRUNC('month', p.payment_date) PAy_month, M1.full_name, count(*) Pay_countperMon, sum(p.amount) Pay_amount
from M1
join payment p
on M1.customer_id = p.customer_id
group by 1, 2
order by 2, 1;

